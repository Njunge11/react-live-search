{"ast":null,"code":"var _jsxFileName = \"/home/njunge/Projects/front-end/react-live-search/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: {},\n      loading: false,\n      value: \"\"\n    };\n    this.queryForMovies = this.queryForMovies.bind(this);\n    this.apiKey = \"e3963faaff14ce2935d481ee7d0179fb\";\n    this.token;\n  }\n\n  async queryForMovies(queryText) {\n    this.setState({\n      value: queryText,\n      loading: true\n    });\n    this.url = `https://api.themoviedb.org/3/search/movie?query=${queryText}&api_key=${this.apiKey}`;\n\n    if (this.token) {\n      this.token.cancel();\n    }\n\n    this.token = axios.CancelToken.source();\n\n    try {\n      const response = await axios(this.url);\n      const movies = await response.data.results;\n      console.log(movies);\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        console.log(\"Request canceled\", error.message);\n      } else {\n        console.log(\"Something went rong\", error.message);\n      }\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for...\",\n      value: this.state.value,\n      onChange: event => this.queryForMovies(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/njunge/Projects/front-end/react-live-search/pages/index.js"],"names":["React","Component","axios","Index","constructor","props","state","movies","loading","value","queryForMovies","bind","apiKey","token","queryText","setState","url","cancel","CancelToken","source","response","data","results","console","log","error","isCancel","message","render","event","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,OAAO,EAAE,KAAvB;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAAb;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,MAAL,GAAc,kCAAd;AACA,SAAKC,KAAL;AACD;;AAED,QAAMH,cAAN,CAAqBI,SAArB,EAAgC;AAC9B,SAAKC,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAEK,SAAT;AAAoBN,MAAAA,OAAO,EAAE;AAA7B,KAAd;AACA,SAAKQ,GAAL,GAAY,mDAAkDF,SAAU,YAAW,KAAKF,MAAO,EAA/F;;AACA,QAAI,KAAKC,KAAT,EAAgB;AACd,WAAKA,KAAL,CAAWI,MAAX;AACD;;AACD,SAAKJ,KAAL,GAAaX,KAAK,CAACgB,WAAN,CAAkBC,MAAlB,EAAb;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAAC,KAAKc,GAAN,CAA5B;AACA,YAAMT,MAAM,GAAG,MAAMa,QAAQ,CAACC,IAAT,CAAcC,OAAnC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AACD,KAJD,CAIE,OAAOkB,KAAP,EAAc;AACd,UAAIvB,KAAK,CAACwB,QAAN,CAAeD,KAAf,CAAJ,EAA2B;AACzBF,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,KAAK,CAACE,OAAtC;AACD,OAFD,MAEO;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,KAAK,CAACE,OAAzC;AACD;AACF;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWG,KAHpB;AAIE,MAAA,QAAQ,EAAEoB,KAAK,IAAI,KAAKnB,cAAL,CAAoBmB,KAAK,CAACC,MAAN,CAAarB,KAAjC,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AAvC0C","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { movies: {}, loading: false, value: \"\" };\n    this.queryForMovies = this.queryForMovies.bind(this);\n    this.apiKey = \"e3963faaff14ce2935d481ee7d0179fb\";\n    this.token;\n  }\n\n  async queryForMovies(queryText) {\n    this.setState({ value: queryText, loading: true });\n    this.url = `https://api.themoviedb.org/3/search/movie?query=${queryText}&api_key=${this.apiKey}`;\n    if (this.token) {\n      this.token.cancel();\n    }\n    this.token = axios.CancelToken.source();\n    try {\n      const response = await axios(this.url);\n      const movies = await response.data.results;\n      console.log(movies);\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        console.log(\"Request canceled\", error.message);\n      } else {\n        console.log(\"Something went rong\", error.message);\n      }\n    }\n  }\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search for...\"\n          value={this.state.value}\n          onChange={event => this.queryForMovies(event.target.value)}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}