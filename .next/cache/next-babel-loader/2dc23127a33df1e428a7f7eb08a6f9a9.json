{"ast":null,"code":"import axios from \"axios\";\nlet source;\nconst resources = {};\n\nconst search = async query => {\n  if (source) {\n    source.cancel();\n  }\n\n  const CancelToken = axios.CancelToken;\n  source = CancelToken.source();\n\n  try {\n    if (resources[query]) {\n      return resources[query];\n    }\n\n    const res = await axios(query, {\n      cancelToken: source.token\n    });\n    const result = res.data.results;\n    resources[query] = reslt;\n    return result;\n  } catch (error) {\n    if (axios.isCancel) {\n      console.log(\"Request cancelled \", error.message);\n    } else {\n      console.log(\"Something went wrong: \", error.message);\n    }\n  }\n};\n\nexport default search;","map":{"version":3,"sources":["/home/njunge/Projects/front-end/react-live-search/src/utils.js"],"names":["axios","source","resources","search","query","cancel","CancelToken","res","cancelToken","token","result","data","results","reslt","error","isCancel","console","log","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAIC,MAAJ;AACA,MAAMC,SAAS,GAAG,EAAlB;;AACA,MAAMC,MAAM,GAAG,MAAMC,KAAN,IAAe;AAC5B,MAAIH,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACI,MAAP;AACD;;AACD,QAAMC,WAAW,GAAGN,KAAK,CAACM,WAA1B;AACAL,EAAAA,MAAM,GAAGK,WAAW,CAACL,MAAZ,EAAT;;AACA,MAAI;AACF,QAAIC,SAAS,CAACE,KAAD,CAAb,EAAsB;AACpB,aAAOF,SAAS,CAACE,KAAD,CAAhB;AACD;;AACD,UAAMG,GAAG,GAAG,MAAMP,KAAK,CAACI,KAAD,EAAQ;AAAEI,MAAAA,WAAW,EAAEP,MAAM,CAACQ;AAAtB,KAAR,CAAvB;AACA,UAAMC,MAAM,GAAGH,GAAG,CAACI,IAAJ,CAASC,OAAxB;AACAV,IAAAA,SAAS,CAACE,KAAD,CAAT,GAAmBS,KAAnB;AACA,WAAOH,MAAP;AACD,GARD,CAQE,OAAOI,KAAP,EAAc;AACd,QAAId,KAAK,CAACe,QAAV,EAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,KAAK,CAACI,OAAxC;AACD,KAFD,MAEO;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,KAAK,CAACI,OAA5C;AACD;AACF;AACF,CArBD;;AAsBA,eAAef,MAAf","sourcesContent":["import axios from \"axios\";\nlet source;\nconst resources = {};\nconst search = async query => {\n  if (source) {\n    source.cancel();\n  }\n  const CancelToken = axios.CancelToken;\n  source = CancelToken.source();\n  try {\n    if (resources[query]) {\n      return resources[query];\n    }\n    const res = await axios(query, { cancelToken: source.token });\n    const result = res.data.results;\n    resources[query] = reslt;\n    return result;\n  } catch (error) {\n    if (axios.isCancel) {\n      console.log(\"Request cancelled \", error.message);\n    } else {\n      console.log(\"Something went wrong: \", error.message);\n    }\n  }\n};\nexport default search;\n"]},"metadata":{},"sourceType":"module"}