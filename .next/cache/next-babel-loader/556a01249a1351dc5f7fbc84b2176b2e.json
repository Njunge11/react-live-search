{"ast":null,"code":"import axios from \"axios\";\nconst resources = {};\n\nconst search = () => {\n  let cancel;\n  return async query => {\n    if (cancel) {\n      // Cancel the previous request before making a new request\n      cancel.cancel();\n    } // Create a new CancelToken\n\n\n    cancel = axios.CancelToken.source();\n\n    try {\n      if (resources[query]) {\n        // Return result if it exists\n        return resources[query];\n      }\n\n      const res = await axios(query, {\n        cancelToken: cancel.token\n      });\n      const result = res.data.results; // Store response\n\n      resources[query] = result;\n      return result;\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        // Handle if request was cancelled\n        console.log(\"Request canceled\", error.message);\n      } else {\n        // Handle usual errors\n        console.log(\"Something went wrong: \", error.message);\n      }\n    }\n  };\n};\n\nexport default search;","map":{"version":3,"sources":["/home/njunge/Projects/front-end/react-live-search/src/utils.js"],"names":["axios","resources","search","cancel","query","CancelToken","source","res","cancelToken","token","result","data","results","error","isCancel","console","log","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,SAAS,GAAG,EAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,MAAIC,MAAJ;AAEA,SAAO,MAAMC,KAAN,IAAe;AACpB,QAAID,MAAJ,EAAY;AACV;AACAA,MAAAA,MAAM,CAACA,MAAP;AACD,KAJmB,CAKpB;;;AACAA,IAAAA,MAAM,GAAGH,KAAK,CAACK,WAAN,CAAkBC,MAAlB,EAAT;;AACA,QAAI;AACF,UAAIL,SAAS,CAACG,KAAD,CAAb,EAAsB;AACpB;AACA,eAAOH,SAAS,CAACG,KAAD,CAAhB;AACD;;AACD,YAAMG,GAAG,GAAG,MAAMP,KAAK,CAACI,KAAD,EAAQ;AAAEI,QAAAA,WAAW,EAAEL,MAAM,CAACM;AAAtB,OAAR,CAAvB;AAEA,YAAMC,MAAM,GAAGH,GAAG,CAACI,IAAJ,CAASC,OAAxB,CAPE,CAQF;;AACAX,MAAAA,SAAS,CAACG,KAAD,CAAT,GAAmBM,MAAnB;AAEA,aAAOA,MAAP;AACD,KAZD,CAYE,OAAOG,KAAP,EAAc;AACd,UAAIb,KAAK,CAACc,QAAN,CAAeD,KAAf,CAAJ,EAA2B;AACzB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,KAAK,CAACI,OAAtC;AACD,OAHD,MAGO;AACL;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,KAAK,CAACI,OAA5C;AACD;AACF;AACF,GA5BD;AA6BD,CAhCD;;AAkCA,eAAef,MAAf","sourcesContent":["import axios from \"axios\";\nconst resources = {};\n\nconst search = () => {\n  let cancel;\n\n  return async query => {\n    if (cancel) {\n      // Cancel the previous request before making a new request\n      cancel.cancel();\n    }\n    // Create a new CancelToken\n    cancel = axios.CancelToken.source();\n    try {\n      if (resources[query]) {\n        // Return result if it exists\n        return resources[query];\n      }\n      const res = await axios(query, { cancelToken: cancel.token });\n\n      const result = res.data.results;\n      // Store response\n      resources[query] = result;\n\n      return result;\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        // Handle if request was cancelled\n        console.log(\"Request canceled\", error.message);\n      } else {\n        // Handle usual errors\n        console.log(\"Something went wrong: \", error.message);\n      }\n    }\n  };\n};\n\nexport default search;\n"]},"metadata":{},"sourceType":"module"}