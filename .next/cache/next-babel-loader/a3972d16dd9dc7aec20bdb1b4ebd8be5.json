{"ast":null,"code":"var _jsxFileName = \"/home/njunge/Projects/front-end/react-live-search/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport search from \"../src/utils\";\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: {},\n      loading: false,\n      value: \"\"\n    };\n    this.queryForMovies = this.queryForMovies.bind(this);\n    this.apiKey = \"e3963faaff14ce2935d481ee7d0179fb\";\n  }\n\n  async queryForMovies(queryText) {\n    this.setState({\n      value: queryText,\n      loading: true\n    });\n    const url = `https://api.themoviedb.org/3/search/movie?query=${queryText}&api_key=${this.apiKey}`;\n    const results = await search(url);\n    cosole.log(\"the results\", results); // let cancel;\n    // if (cancel) {\n    //   cancel.cancel();\n    // }\n    // cancel = axios.CancelToken.source();\n    // try {\n    //   const response = await axios(this.url, { cancelToken: cancel.token });\n    //   const movies = await response.data.results;\n    //   console.log(movies);\n    // } catch (error) {\n    //   if (axios.isCancel(error)) {\n    //     console.log(\"Request canceled\", error.message);\n    //   } else {\n    //     console.log(\"Something went rong\", error.message);\n    //   }\n    // }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for...\",\n      value: this.state.value,\n      onChange: event => this.queryForMovies(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/njunge/Projects/front-end/react-live-search/pages/index.js"],"names":["React","Component","search","Index","constructor","props","state","movies","loading","value","queryForMovies","bind","apiKey","queryText","setState","url","results","cosole","log","render","event","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,OAAO,EAAE,KAAvB;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAAb;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,MAAL,GAAc,kCAAd;AACD;;AAED,QAAMF,cAAN,CAAqBG,SAArB,EAAgC;AAC9B,SAAKC,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAEI,SAAT;AAAoBL,MAAAA,OAAO,EAAE;AAA7B,KAAd;AACA,UAAMO,GAAG,GAAI,mDAAkDF,SAAU,YAAW,KAAKD,MAAO,EAAhG;AACA,UAAMI,OAAO,GAAG,MAAMd,MAAM,CAACa,GAAD,CAA5B;AACAE,IAAAA,MAAM,CAACC,GAAP,CAAW,aAAX,EAA0BF,OAA1B,EAJ8B,CAK9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,eAFd;AAGE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWG,KAHpB;AAIE,MAAA,QAAQ,EAAEW,KAAK,IAAI,KAAKV,cAAL,CAAoBU,KAAK,CAACC,MAAN,CAAaZ,KAAjC,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AAzC0C","sourcesContent":["import React, { Component } from \"react\";\nimport search from \"../src/utils\";\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { movies: {}, loading: false, value: \"\" };\n    this.queryForMovies = this.queryForMovies.bind(this);\n    this.apiKey = \"e3963faaff14ce2935d481ee7d0179fb\";\n  }\n\n  async queryForMovies(queryText) {\n    this.setState({ value: queryText, loading: true });\n    const url = `https://api.themoviedb.org/3/search/movie?query=${queryText}&api_key=${this.apiKey}`;\n    const results = await search(url);\n    cosole.log(\"the results\", results);\n    // let cancel;\n    // if (cancel) {\n    //   cancel.cancel();\n    // }\n    // cancel = axios.CancelToken.source();\n    // try {\n    //   const response = await axios(this.url, { cancelToken: cancel.token });\n    //   const movies = await response.data.results;\n    //   console.log(movies);\n    // } catch (error) {\n    //   if (axios.isCancel(error)) {\n    //     console.log(\"Request canceled\", error.message);\n    //   } else {\n    //     console.log(\"Something went rong\", error.message);\n    //   }\n    // }\n  }\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search for...\"\n          value={this.state.value}\n          onChange={event => this.queryForMovies(event.target.value)}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}