{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar cancel;\n\nvar search =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(query) {\n    var res, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (cancel) {\n              cancel.cancel();\n            }\n\n            cancel = axios.CancelToken.source();\n            _context.next = 4;\n            return axios(query, {\n              CancelToken: cancel.token\n            });\n\n          case 4:\n            res = _context.sent;\n            result = res.data.results;\n            console.log(\"the result\", result);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function search(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default search;","map":{"version":3,"sources":["/home/njunge/Projects/front-end/react-live-search/src/utils.js"],"names":["axios","cancel","search","query","CancelToken","source","token","res","result","data","results","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAIC,MAAJ;;AACA,IAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,gBAAIF,MAAJ,EAAY;AACVA,cAAAA,MAAM,CAACA,MAAP;AACD;;AACDA,YAAAA,MAAM,GAAGD,KAAK,CAACI,WAAN,CAAkBC,MAAlB,EAAT;AAJa;AAAA,mBAKKL,KAAK,CAACG,KAAD,EAAQ;AAAEC,cAAAA,WAAW,EAAEH,MAAM,CAACK;AAAtB,aAAR,CALV;;AAAA;AAKPC,YAAAA,GALO;AAMPC,YAAAA,MANO,GAMED,GAAG,CAACE,IAAJ,CAASC,OANX;AAObC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,MAA1B;;AAPa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANN,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAUA,eAAeA,MAAf","sourcesContent":["import axios from \"axios\";\nlet cancel;\nconst search = async query => {\n  if (cancel) {\n    cancel.cancel();\n  }\n  cancel = axios.CancelToken.source();\n  const res = await axios(query, { CancelToken: cancel.token });\n  const result = res.data.results;\n  console.log(\"the result\", result);\n};\n\nexport default search;\n"]},"metadata":{},"sourceType":"module"}