{"version":3,"file":"static/webpack/static/development/pages/index.js.cb5d3af8b6e009548ea5.hot-update.js","sources":["webpack:///./pages/index.js","webpack:///./src/utils.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { search } from \"../src/utils\";\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { movies: {}, loading: false, value: \"\" };\n    this.queryForMovies = this.queryForMovies.bind(this);\n    this.apiKey = \"e3963faaff14ce2935d481ee7d0179fb\";\n  }\n\n  async queryForMovies(queryText) {\n    console.log(queryText);\n    this.setState({ value: queryText, loading: true });\n    const url = `https://api.themoviedb.org/3/search/movie?query=${queryText}&api_key=${this.apiKey}`;\n    const results = await search(url);\n    // let cancel;\n    // if (cancel) {\n    //   cancel.cancel();\n    // }\n    // cancel = axios.CancelToken.source();\n    // try {\n    //   const response = await axios(this.url, { cancelToken: cancel.token });\n    //   const movies = await response.data.results;\n    //   console.log(movies);\n    // } catch (error) {\n    //   if (axios.isCancel(error)) {\n    //     console.log(\"Request canceled\", error.message);\n    //   } else {\n    //     console.log(\"Something went rong\", error.message);\n    //   }\n    // }\n  }\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search for...\"\n          value={this.state.value}\n          onChange={event => this.queryForMovies(event.target.value)}\n        />\n      </div>\n    );\n  }\n}\n","const resources = {};\n\nconst makeRequestCreator = () => {\n  let cancel;\n\n  return async query => {\n    if (cancel) {\n      // Cancel the previous request before making a new request\n      cancel.cancel();\n    }\n    // Create a new CancelToken\n    cancel = axios.CancelToken.source();\n    try {\n      if (resources[query]) {\n        // Return result if it exists\n        return resources[query];\n      }\n      const res = await axios(query, { cancelToken: cancel.token });\n\n      const result = res.data.results;\n      // Store response\n      resources[query] = result;\n\n      return result;\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        // Handle if request was cancelled\n        console.log(\"Request canceled\", error.message);\n      } else {\n        // Handle usual errors\n        console.log(\"Something went wrong: \", error.message);\n      }\n    }\n  };\n};\n\nexport const search = makeRequestCreator();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAKA;AACA;;;;;;AACA;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AACA;AACA;;AADA;AACA;;;;;;;;;;;;;;;;;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAzCA;AACA;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAYA;AAAA;AACA;AAbA;AAYA;AAEA;AACA;AACA;AAhBA;AACA;AADA;AAAA;AAAA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AACA;;;;A","sourceRoot":""}