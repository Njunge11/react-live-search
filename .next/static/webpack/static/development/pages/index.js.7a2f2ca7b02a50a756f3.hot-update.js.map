{"version":3,"file":"static/webpack/static/development/pages/index.js.7a2f2ca7b02a50a756f3.hot-update.js","sources":["webpack:///./src/utils.js"],"sourcesContent":["import axios from \"axios\";\nconst resources = {};\n\nconst search = () => {\n  let cancel;\n\n  return async query => {\n    if (cancel) {\n      // Cancel the previous request before making a new request\n      cancel.cancel();\n    }\n    // Create a new CancelToken\n    cancel = axios.CancelToken.source();\n    try {\n      if (resources[query]) {\n        // Return result if it exists\n        return resources[query];\n      }\n      const res = await axios(query, { cancelToken: cancel.token });\n\n      const result = res.data.results;\n      // Store response\n      resources[query] = result;\n\n      return result;\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        // Handle if request was cancelled\n        console.log(\"Request canceled\", error.message);\n      } else {\n        // Handle usual errors\n        console.log(\"Something went wrong: \", error.message);\n      }\n    }\n  };\n};\n\nexport default search;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAYA;AAAA;AACA;AAbA;AAYA;AAEA;AACA;AACA;AAhBA;AACA;AADA;AAAA;AAAA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AACA;;;;A","sourceRoot":""}